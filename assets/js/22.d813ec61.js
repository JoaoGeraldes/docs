(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{415:function(e,t,a){"use strict";a.r(t);var n=a(5),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"configure-general-settings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configure-general-settings"}},[e._v("#")]),e._v(" Configure general settings")]),e._v(" "),a("p",[e._v("The following information describes the most important node configuration settings found in the "),a("code",[e._v("~/.terra/config/")]),e._v(" directory. It is recommended that you update these settings with your own information.")]),e._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[e._v("Structure of .terra/config")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("~/.terra/config\n│-- addrbook.json                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# a registry of peers to connect to")]),e._v("\n│-- app.toml                            "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# terrad configuration file")]),e._v("\n│-- client.toml                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# configurations for the cli wallet (ex terracli)")]),e._v("\n│-- config.toml                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Tendermint configuration  file")]),e._v("\n│-- genesis.json                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# gensesis transactions")]),e._v("\n│-- node_key.json                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# private key used for node authentication in the p2p protocol (its corresponding public key is the nodeid)")]),e._v("\n└-- priv_validator_key.json             "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# key used by the validator on the node to sign blocks")]),e._v("\n")])])])]),e._v(" "),a("h2",{attrs:{id:"initialize-and-configure-moniker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initialize-and-configure-moniker"}},[e._v("#")]),e._v(" Initialize and configure moniker")]),e._v(" "),a("p",[e._v("Initialize the node with a human-readable name:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("terrad init "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("your_custom_moniker"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# ex., terrad init validator-joes-node")]),e._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("Moniker characters")]),e._v(" "),a("p",[e._v("Monikers can only contain ASCII characters; using Unicode characters will render your node unreachable by other peers in the network.")])]),e._v(" "),a("p",[e._v("You can update your node's moniker by editing the "),a("code",[e._v("moniker")]),e._v(" field in  "),a("code",[e._v("~/.terra/config/config.toml")])]),e._v(" "),a("h2",{attrs:{id:"update-minimum-gas-prices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update-minimum-gas-prices"}},[e._v("#")]),e._v(" Update minimum gas prices")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Open "),a("code",[e._v("~/.terra/config/app.toml")]),e._v(".")])]),e._v(" "),a("li",[a("p",[e._v("Modify "),a("code",[e._v("minimum-gas-prices")]),e._v(" and set the minimum price of gas a validator will accept to validate a transaction and to prevent spam.")])])]),e._v(" "),a("ul",[a("li",[e._v("You can "),a("a",{attrs:{href:"https://fcd.terra.dev/v1/txs/gas_prices",target:"_blank",rel:"noopener noreferrer"}},[e._v("query FCD"),a("OutboundLink")],1),e._v(" to view the current gas prices.")])]),e._v(" "),a("p",[a("strong",[e._v("Example")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The minimum gas prices a validator is willing to accept for processing a")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# transaction. A transaction's fees must meet the minimum of any denomination")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# specified in this config (e.g. 0.25token1;0.0001token2).")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[e._v("minimum-gas-prices")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0.01133uluna,0.15uusd,0.104938usdr,169.77ukrw,428.571umnt,0.125ueur,0.98ucny,16.37ujpy,0.11ugbp,10.88uinr,0.19ucad,0.14uchf,0.19uaud,0.2usgd,4.62uthb,1.25usek,1.25unok,0.9udkk,2180.0uidr,7.6uphp,1.17uhkd"')]),e._v("\n")])])]),a("h2",{attrs:{id:"start-the-light-client-daemon-lcd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start-the-light-client-daemon-lcd"}},[e._v("#")]),e._v(" Start the light client daemon (LCD)")]),e._v(" "),a("p",[e._v("For information about the available Terra REST API endpoints, see the "),a("a",{attrs:{href:"https://lcd.terra.dev/swagger/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Swagger documentation"),a("OutboundLink")],1),e._v(". To enable the REST API and Swagger, and to start the LCD, complete the following steps:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Open "),a("code",[e._v("~/.terra/config/app.toml")]),e._v(".")])]),e._v(" "),a("li",[a("p",[e._v("Locate the "),a("code",[e._v("API Configuration")]),e._v(" section ("),a("code",[e._v("[api]")]),e._v(").")])]),e._v(" "),a("li",[a("p",[e._v("Change "),a("code",[e._v("enable = false")]),e._v(" to "),a("code",[e._v("enable = true")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Enable defines if the API server should be enabled.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[e._v("enable")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Optional: Swagger defines if swagger documentation should automatically be registered. To enable Swagger, change "),a("code",[e._v("swagger = false to")]),e._v("swagger = true`.")]),e._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key property"}},[e._v("swagger")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Restart the service via "),a("code",[e._v("systemctl restart terrad")]),e._v(". Once restarted, the LCD will be available (by default on port "),a("code",[e._v("127.0.0.1:26657")]),e._v(")")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);