(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{435:function(e,t,s){"use strict";s.r(t);var a=s(5),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"auth"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#auth"}},[e._v("#")]),e._v(" Auth")]),e._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("Terra's Auth module inherits from Cosmos SDK's "),s("a",{attrs:{href:"https://docs.cosmos.network/master/modules/auth/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("auth")]),s("OutboundLink")],1),e._v(" module. This document is a stub, and covers mainly important Terra-specific notes about how it is used.")])]),e._v(" "),s("p",[e._v("Terra's Auth module extends the functionality from Cosmos SDK's "),s("code",[e._v("auth")]),e._v(" module with a modified ante handler, which applies basic transaction validity checks, such as signatures, nonces, and auxiliary fields. This module also defines a special vesting account type that handles the logic for token vesting from the Luna presale.")]),e._v(" "),s("h2",{attrs:{id:"gas-fee"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gas-fee"}},[e._v("#")]),e._v(" Gas Fee")]),e._v(" "),s("p",[e._v("Like all transactions on the Terra blockchain, "),s("RouterLink",{attrs:{to:"/Reference/Terra-core/Module-specifications/spec-bank.html#msgsend"}},[s("code",[e._v("MsgSend")])]),e._v(" and "),s("RouterLink",{attrs:{to:"/Reference/Terra-core/Module-specifications/spec-bank.html#msgmultisend"}},[s("code",[e._v("MsgMultiSend")])]),e._v(" incur gas fees. These fees are determined by a validator's minimum gas price and the complexity of the transaction. More complex transactions incur higher fees. Gas fees are specified by the sender when a transaction is outbound. For more information on how gas is calculated, see "),s("RouterLink",{attrs:{to:"/Reference/terrad/#fees"}},[e._v("fees")]),e._v(".")],1),e._v(" "),s("h2",{attrs:{id:"parameters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),s("p",[e._v("The subspace for the Auth module is "),s("code",[e._v("auth")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" Params "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("struct")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n\tMaxMemoCharacters      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("uint64")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('`json:"max_memo_characters" yaml:"max_memo_characters"`')]),e._v("\n\tTxSigLimit             "),s("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("uint64")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('`json:"tx_sig_limit" yaml:"tx_sig_limit"`')]),e._v("\n\tTxSizeCostPerByte      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("uint64")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('`json:"tx_size_cost_per_byte" yaml:"tx_size_cost_per_byte"`')]),e._v("\n\tSigVerifyCostED25519   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("uint64")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('`json:"sig_verify_cost_ed25519" yaml:"sig_verify_cost_ed25519"`')]),e._v("\n\tSigVerifyCostSecp256k1 "),s("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("uint64")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('`json:"sig_verify_cost_secp256k1" yaml:"sig_verify_cost_secp256k1"`')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("h3",{attrs:{id:"maxmemocharacters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#maxmemocharacters"}},[e._v("#")]),e._v(" MaxMemoCharacters")]),e._v(" "),s("p",[e._v("The maximum permitted number of characters in the memo of a transaction.")]),e._v(" "),s("ul",[s("li",[e._v("type: "),s("code",[e._v("uint64")])]),e._v(" "),s("li",[e._v("default: "),s("code",[e._v("256")])])]),e._v(" "),s("h3",{attrs:{id:"txsiglimit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#txsiglimit"}},[e._v("#")]),e._v(" TxSigLimit")]),e._v(" "),s("p",[e._v("The maximum number of signers in a transaction. A single transaction can have multiple messages and multiple signers. Because the sig verification cost is generally higher than other operations, the number of signers is limited to 100.")]),e._v(" "),s("ul",[s("li",[e._v("type: "),s("code",[e._v("uint64")])]),e._v(" "),s("li",[e._v("default: "),s("code",[e._v("100")])])]),e._v(" "),s("h3",{attrs:{id:"txsizecostperbyte"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#txsizecostperbyte"}},[e._v("#")]),e._v(" TxSizeCostPerByte")]),e._v(" "),s("p",[e._v("The cost per byte used to compute the gas consumption of a transaction. "),s("code",[e._v("TxSizeCostPerByte * txsize")]),e._v(".")]),e._v(" "),s("ul",[s("li",[e._v("type: "),s("code",[e._v("uint64")])]),e._v(" "),s("li",[e._v("default: "),s("code",[e._v("10")])])]),e._v(" "),s("h3",{attrs:{id:"sigverifycosted25519"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sigverifycosted25519"}},[e._v("#")]),e._v(" SigVerifyCostED25519")]),e._v(" "),s("p",[e._v("The gas cost for verifying ED25519 signatures.")]),e._v(" "),s("ul",[s("li",[e._v("type: "),s("code",[e._v("uint64")])]),e._v(" "),s("li",[e._v("default: "),s("code",[e._v("590")])])]),e._v(" "),s("h3",{attrs:{id:"sigverifycostsecp256k1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sigverifycostsecp256k1"}},[e._v("#")]),e._v(" SigVerifyCostSecp256k1")]),e._v(" "),s("p",[e._v("The gas cost for verifying Secp256k1 signatures.")]),e._v(" "),s("ul",[s("li",[e._v("type: "),s("code",[e._v("uint64")])]),e._v(" "),s("li",[e._v("default: "),s("code",[e._v("1000")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);